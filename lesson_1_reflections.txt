Using file compare on windows and diff on git bash helped me understand how to find a bug in a program.
 
Rather than meanually searching line by line, the cmd prompt tools helped isolate lines that differed in the old and new file.

Since a bug didn't exist beforehand, it must of manifested due to a change.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When you need to recover an old version, you can find it very quickly, rather than the knowledge dissappearing.  
If you screw up the file, you can recover.  Rather than possibly re-writing the entire code.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Allowing saving multiple files in 1 commit allows you to package a feature or interconnected files together.  That way, you can review and revert the entire commit rather than each file one by one.
